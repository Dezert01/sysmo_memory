/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TutorialImport } from './routes/tutorial'
import { Route as SupportImport } from './routes/support'
import { Route as SettingsImport } from './routes/settings'
import { Route as SelectLevelImport } from './routes/selectLevel'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TutorialRoute = TutorialImport.update({
  path: '/tutorial',
  getParentRoute: () => rootRoute,
} as any)

const SupportRoute = SupportImport.update({
  path: '/support',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const SelectLevelRoute = SelectLevelImport.update({
  path: '/selectLevel',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/selectLevel': {
      id: '/selectLevel'
      path: '/selectLevel'
      fullPath: '/selectLevel'
      preLoaderRoute: typeof SelectLevelImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportImport
      parentRoute: typeof rootRoute
    }
    '/tutorial': {
      id: '/tutorial'
      path: '/tutorial'
      fullPath: '/tutorial'
      preLoaderRoute: typeof TutorialImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SelectLevelRoute,
  SettingsRoute,
  SupportRoute,
  TutorialRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/selectLevel",
        "/settings",
        "/support",
        "/tutorial"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/selectLevel": {
      "filePath": "selectLevel.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/support": {
      "filePath": "support.tsx"
    },
    "/tutorial": {
      "filePath": "tutorial.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
